trigger: none

stages:

# Stage 1 - BUILD
- stage: Build
  condition: true
  jobs:
  - job: BuildJob
    pool:
      vmImage: 'ubuntu-latest'
    continueOnError: true
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(pythonVersion)'
      displayName: 'Use Python $(pythonVersion)'
    - script: python3 base-app/helloworld.py
    displayName: 'Run Hello World'

# Stage 2 - INSTALL TOOLS
- stage: InstallTools
  condition: true
  jobs:
  - job: InstallToolsJob
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - script: |
        python3 -m ensurepip --upgrade
        python3 -m pip install --upgrade pip setuptools wheel
      displayName: 'Installation of the tools'

# Stage 3 - CHECK INSTALL TOOLS AND VERSIONS
- stage: CheckInstallTools
  condition: true
  jobs:
  - job: CheckInstallToolsJob
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - script: |
        python3 --version
        pip --version
      displayName: 'Check Python and pip versions'

# Stage 4 - UNIT TEST
- stage: UnitTest
  condition: true
  jobs:
  - job: UnitTestJob
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    # CHECK - Pyton and pip versions
    - script: |
        python3 --version
        pip --version
      displayName: 'Check Python and pip versions'
    # CHECK - Working directory
    - script: |
        pwd
        ls -R
      displayName: 'Check working directory'
    # INSTALL - Pytest and Coverage to Test
    - script: |
        pip install pytest pytest-azurepipelines pytest-cov
        pip list
        python3 -m pytest --doctest-modules --junitxml=junit/test-results.xml --cov=. --cov-report=xml -v test-app/test-main.py
      displayName: 'Unit Test with pytest'